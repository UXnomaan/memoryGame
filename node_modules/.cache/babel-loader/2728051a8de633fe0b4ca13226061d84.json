{"ast":null,"code":"var _jsxFileName = \"/Users/bakhodir008/Desktop/memogame/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NewPage from './NewPage'; // import NewPage from './NewPage';\n\nimport SingleCard from './SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  src: '/img/base.jpeg',\n  matched: false\n}, {\n  src: '/img/bear.jpeg',\n  matched: false\n}, {\n  src: '/img/c.jpg',\n  matched: false\n}, {\n  src: '/img/fella.webp',\n  matched: false\n}, {\n  src: '/img/fox.jpeg',\n  matched: false\n}, {\n  src: '/img/minions.jpeg',\n  matched: false\n}, {\n  src: '/img/spider.jpeg',\n  matched: false\n}, {\n  src: '/img/tesla.jpeg',\n  matched: false\n}, {\n  src: '/img/AcetoFive.jpeg',\n  matched: false\n}, {\n  src: '/img/ca.webp',\n  matched: false\n}];\n\nconst App = () => {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCard = () => {\n    const shuffledCard = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCard);\n    setTurn(0);\n  };\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCars => {\n          return prevCars.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurns();\n      } else {\n        setTimeout(() => resetTurns(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  const resetTurns = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurn(prevTurn => prevTurn + 1);\n    setDisabled(false);\n  };\n\n  useEffect(() => {\n    shuffleCard();\n  }, []);\n  const getMatches = cards.map(match => match.matched);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: getMatches.every(e => e === true) ? /*#__PURE__*/_jsxDEV(NewPage, {\n      className: \"zipme\",\n      turns: turn,\n      shuffleCard: shuffleCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Memory Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffleCard,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n          card: card,\n          handleChoice: handleChoice,\n          flipped: card.matched || card === choiceOne || card === choiceTwo,\n          disabled: disabled\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You tried to complete this \", turn, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rsa1LblcuMoaW88yXFQQ7SiRrU4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NewPage","SingleCard","cardImages","src","matched","App","cards","setCards","turn","setTurn","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCard","shuffledCard","sort","Math","random","map","card","id","handleChoice","prevCars","resetTurns","setTimeout","prevTurn","getMatches","match","every","e"],"sources":["/Users/bakhodir008/Desktop/memogame/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport NewPage from './NewPage';\n// import NewPage from './NewPage';\nimport SingleCard from './SingleCard';\n\nconst cardImages = [\n  { src: '/img/base.jpeg', matched: false },\n  { src: '/img/bear.jpeg', matched: false },\n  { src: '/img/c.jpg', matched: false },\n  { src: '/img/fella.webp', matched: false },\n  { src: '/img/fox.jpeg', matched: false },\n  { src: '/img/minions.jpeg', matched: false },\n  { src: '/img/spider.jpeg', matched: false },\n  { src: '/img/tesla.jpeg', matched: false },\n  { src: '/img/AcetoFive.jpeg', matched: false },\n  { src: '/img/ca.webp', matched: false },\n];\n\nconst App = () => {\n  const [cards, setCards] = useState([]);\n  const [turn, setTurn] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCard = () => {\n    const shuffledCard = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCard);\n    setTurn(0);\n  };\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCars) => {\n          return prevCars.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurns();\n      } else {\n        setTimeout(() => resetTurns(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  const resetTurns = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurn((prevTurn) => prevTurn + 1);\n    setDisabled(false);\n  };\n\n  useEffect(() => {\n    shuffleCard();\n  }, []);\n\n  const getMatches = cards.map((match) => match.matched);\n\n  return (\n    <div className='App'>\n      {getMatches.every((e) => e === true) ? (\n        <NewPage className='zipme' turns={turn} shuffleCard={shuffleCard} />\n      ) : (\n        <div>\n          <h2>Memory Game</h2>\n          <button onClick={shuffleCard}>New Game</button>\n\n          {/* // */}\n\n          <div className='card-grid'>\n            {cards.map((card) => (\n              <SingleCard\n                key={card.id}\n                card={card}\n                handleChoice={handleChoice}\n                flipped={\n                  card.matched || card === choiceOne || card === choiceTwo\n                }\n                disabled={disabled}\n              />\n            ))}\n          </div>\n          <p>You tried to complete this {turn} times</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}